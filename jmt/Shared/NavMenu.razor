@inject IJSRuntime jsRuntime
@inject NavigationManager NavigationManager
@implements IDisposable

<nav class="navbar bg-dark shadow-sm">
    
    <div class="container d-flex">

        <button class="btn-primary-outline" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
            <i class="fa-solid fa-bars fa-lg"></i>
        </button>

        <a class="mx-auto navbar-brand" href="">
            <img height="48" role="img" src="img/logo.png" alt="JMT Logo"/>
        </a>

        <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
            <div class="offcanvas-header">
                <h5 class="offcanvas-title" id="offcanvasNavbarLabel">JMT Electrical</h5>
                <button type="button" class="btn-primary-outline" data-bs-dismiss="offcanvas">
                    <i class="fa-solid fa-xmark fa-lg"></i>
                </button>
            </div>
            <div class="offcanvas-body">
                <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">

                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span aria-hidden="true"></span> Home
                    </NavLink>

                    <NavLink class="nav-link" href="#services">
                        <span aria-hidden="true"></span> Services
                    </NavLink>

                    <NavLink class="nav-link" href="#about">
                        <span aria-hidden="true"></span> About
                    </NavLink>

                    <NavLink class="nav-link" href="#contact">
                        <span aria-hidden="true"></span> Contact
                    </NavLink>
                </ul>
            </div>
        </div>

        <div>
            <a type="button" class="px-1 text-light text-decoration-none" href="https://www.instagram.com/jmt_electrical/" target="_blank">
                <i class="fa-brands fa-instagram fa-lg"></i>
            </a>
        </div>

    </div>
</nav>

@code

{
    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await ScrollToFragment();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private async void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        await ScrollToFragment();
        StateHasChanged();
    }

    private async Task ScrollToFragment()
    {
        var uri = new Uri(NavigationManager.Uri, UriKind.Absolute);
        var fragment = uri.Fragment;
        if (fragment.StartsWith('#'))
        {
    // Handle text fragment (https://example.org/#test:~:text=foo)
    // https://github.com/WICG/scroll-to-text-fragment/
            var elementId = fragment.Substring(1);
            var index = elementId.IndexOf(":~:", StringComparison.Ordinal);
            if (index > 0)
            {
                elementId = elementId.Substring(0, index);
            }

            if (!string.IsNullOrEmpty(elementId))
            {
                await jsRuntime.InvokeVoidAsync("BlazorScrollToId", elementId);
            }
        }
    }

    public string GetId(string sectionId)
    {
        return sectionId;
    }

}
